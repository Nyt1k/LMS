@model IEnumerable<IdentityRole>

@using Microsoft.AspNetCore.Authorization

@inject IAuthorizationService authorizationService 

@{
    ViewBag.Title = "All Roles";
}

<h1>All Roles</h1>

@if (Model.Any())
{
    <a class="btn btn-primary mb-3" asp-action="CreateRole" asp-controller="administration">Add Role</a>

    foreach (var role in Model)
    {
        <div class="card mb-3">
            <div class="card-header">
                Role Id: @role.Id
            </div>
            <div class="card-body">
                <h5 class="card-title">@role.Name</h5>
            </div>
            <div class="card-footer">
                <form asp-action="DeleteRole" asp-route-id="@role.Id" method="post">

                    @if ((await authorizationService.AuthorizeAsync(User, "EditRolePolicy")).Succeeded)
                    {
                        <a asp-action="EditRole" asp-controller="Administration" asp-route-id="@role.Id" class="btn btn-primary">Edit</a>
                    }


                    <button type="submit" class="btn btn-danger"
                            onclick="return confirm('Are you sure you want to delete user: @role.Name')"> Delete </button>
                </form>
            </div>
        </div>
    }
}
else
{
    <div class="card">
        <div class="card-header">
            No roles created yet
        </div>
        <div class="card-body">
            <h5 class="card-title">
                You can create new roles.
            </h5>
            <a class="btn btn-primary" asp-action="CreateRole" asp-controller="administration">Create Role</a>
        </div>
    </div>
}